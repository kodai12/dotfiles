####################
# Develop Plugin:
####################
[[plugins]]
repo = 'kodai12/vimify'
hook_add = '''
source ~/dotfiles/nvim/env.vim
'''

[[plugins]]
repo = 'kodai12/vim-workspace'
hook_add = '''
noremap <Tab> :WSNext<CR>
noremap <S-Tab> :WSPrev<CR>
noremap <SPACE><Tab> :WSClose<CR>
noremap <SPACE><S-Tab> :WSBufOnly<CR>
noremap <C-t> :WSTabNew<CR>

cabbrev bonly WSBufOnly

let g:workspace_powerline_separators = 1
let g:workspace_tab_icon = "\uf00a"
let g:workspace_modified_icon = "\uf040"
let g:workspace_left_trunc_icon = "\uf0a8"
let g:workspace_right_trunc_icon = "\uf0a9"

highlight WorkspaceBufferCurrent ctermfg=17 ctermbg=132 guibg=#a9667a
highlight WorkspaceBufferActive ctermfg=255 ctermbg=237 guifg=#eeeeee guibg=#3a3a3a
highlight WorkspaceBufferHidden ctermfg=255 ctermbg=237 guifg=#eeeeee guibg=#3a3a3a
highlight WorkspaceTabCurrent ctermfg=015 ctermbg=105 guifg=#ffffff guibg=#8787ff
highlight WorkspaceTabHidden ctermfg=246 ctermbg=60 guifg=#eeeeee guibg=#605779
highlight WorkspaceFill ctermfg=246 ctermbg=246 guifg=#eeeeee guibg=#1c1c1c
'''

####################
# Dein:
####################
[[plugins]]
repo = 'Shougo/dein.vim'

# [[plugins]]
# repo = 'Shougo/vimproc.vim'
# build = 'make'
# hook_post_update = '''
#   if dein#util#_is_windows()
#     let cmd = 'tools\\update-dll-mingw'
#   elseif dein#util#_is_cygwin()
#     let cmd = 'make -f make_cygwin.mak'
#   elseif executable('gmake')
#     let cmd = 'gmake'
#   else
#     let cmd = 'make'
#   endif
#   let g:dein#plugin.build = cmd
# '''

[[plugins]]
repo = 'haya14busa/dein-command.vim'

####################
# Terminal
####################
# [[plugins]]
# repo = 'Shougo/deol.nvim'
# hook_add = '''
# nmap T :Deol<CR>
# '''

####################
# Colorsheme:
####################
[[plugins]]
repo = 'rhysd/vim-color-spring-night'
hook_add = '''
let g:spring_night_cterm_italic = 1
let g:spring_night_high_contrast = 0
'''

[[plugins]]
repo = 'sainnhe/vim-color-forest-night'

####################
# Interfaces:
####################
[[plugins]]
repo = 'guns/xterm-color-table.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_start_level = 2
  let g:indent_guides_guide_size = 1
  let g:indentLine_faster = 1
  let g:indentLine_concealcursor = ''
  let g:indentLine_conceallevel = 1
  let g:indentLine_fileTypeExclude = ['startify','help', 'nerdtree', 'tagbar', 'unite', 'tweetvim', 'qfixhowm']
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
build = ':UpdateRemotePlugins'
depends = ['defx-git', 'defx-icons']
on_cmd = 'Defx'
hook_add = '''
nnoremap <silent> <SPACE>ftt :<C-u>Defx -split=vertical -winwidth=40 -direction=topleft -ignored-files='.git' -toggle -resume<CR>
nnoremap <silent> <SPACE>ftf :<C-u>Defx -split=vertical -winwidth=40 -direction=topleft -ignored-files='.git' `expand('%:p:h')` -search=`expand('%:p')`<CR>
'''
hook_source = 'source ~/dotfiles/nvim/plugins/defx.rc.vim'

[[plugins]]
repo = 'kristijanhusak/defx-git'

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
let g:NERDTreeShowBookmarks=1
let NERDTreeShowHidden = 1
let NERDTreeQuitOnOpen = 1
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
let g:NERDTreeHighlightCursorline = 0
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
autocmd StdinReadPre * let s:std_in=1
'''

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
depends = ['nerdtree']
hook_add = '''
source ~/dotfiles/nvim/plugins/web_dev_icons.rc.vim
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
"let g:WebDevIconsUnicodeDecorateFolderNodes = 1
if exists("g:loaded_webdevicons")
    call webdevicons#refresh()
endif
'''

[[plugins]]
repo = 'mhinz/vim-startify'
hook_add = '''
source ~/dotfiles/nvim/plugins/startify.rc.vim
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
source ~/.config/nvim/plugins/lightline.rc.vim
'''

[[plugins]]
repo = 'powerline/powerline'

[[plugins]]
repo = 'rickhowe/diffchar.vim'
hook_add = '''
let g:DiffUnit = 'Word1'
let g:DiffColors = 3 " 16 colors in fixed order
let g:DiffUpdate = 1
'''

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
let g:rainbow_active = 1
let g:rainbow_conf = {
      \ 'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick'],
      \	'ctermfgs': ['lightblue', 'lightyellow', 'lightcyan', 'lightmagenta'],
      \ 'operators': '_,_',
      \	'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold'],
      \	'separately': {
      \		'*': {},
      \		'tex': {
      \			'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/'],
      \		},
      \		'lisp': {
      \			'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick', 'darkorchid3'],
      \		},
      \		'vim': {
      \			'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimFuncBody', 'start=/\[/ end=/\]/ containedin=vimFuncBody', 'start=/{/ end=/}/ fold containedin=vimFuncBody'],
      \		},
      \		'html': {
      \			'parentheses': ['start=/\v\<((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ >])@!\z([-_:a-zA-Z0-9]+)(\s+[-_:a-zA-Z0-9]+(\=("[^"]*"|'."'".'[^'."'".']*'."'".'|[^ '."'".'"><=`]*))?)*\>/ end=#</\z1># fold'],
      \		},
      \		'css': 0,
      \	}
      \}
'''

[[plugins]]
repo = 'machakann/vim-highlightedyank'
hook_add = '''
if !exists('##TextYankPost')
  map y <Plug>(highlightedyank)
endif
'''

####################
# Language Plugins:
####################
[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
build = 'coc#util#install()'
hook_add = '''
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
" Remap for rename current word
nmap <silent>rn <Plug>(coc-rename)
" Highlight symbol under cursor on CursorHold
autocmd CursorHold * silent call CocActionAsync('highlight')
" Use K for show documentation in preview window
nnoremap <silent> <C-k> :call <SID>show_documentation()<CR>
function! s:show_documentation()
  if &filetype == 'vim'
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction
hi! link CocErrorSign WarningMsg
hi! link CocWarningSign Number
hi! link CocInfoSign Type
'''
hook_source = '''
let g:coc_status_error_sign = '•'
let g:coc_status_warning_sign = '•'
let g:coc_global_extensions =['coc-html','coc-css','coc-snippets','coc-prettier','coc-eslint','coc-emmet','coc-tsserver','coc-pairs','coc-json','coc-python','coc-imselect','coc-highlight','coc-git','coc-emoji','coc-lists','coc-post','coc-stylelint','coc-yaml']
augroup HTMLANDXML
  autocmd!
  autocmd Filetype xml inoremap <buffer> </ </<C-x><C-o><ESC>F<i
  autocmd Filetype html inoremap <buffer> </ </<C-x><C-o><ESC>F<i
augroup END
'''

# [[plugins]]
# repo = 'kkvh/vim-docker-tools'

####################
# Git:
####################
[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = '''
source ~/.config/nvim/plugins/gina.rc.vim
'''

[[plugins]]
repo = 'idanarye/vim-merginal'

[[plugins]]
repo = 'rhysd/committia.vim'
hook_add = '''
let g:committia_open_only_vim_starting = 1
let g:committia_hooks = {}
function! g:committia_hooks.edit_open(info)
  " Additional settings
  setlocal spell

  " If no commit message, start with insert mode
  if a:info.vcs ==# 'git' && getline(1) ==# ''
    startinsert
  end

  " Scroll the diff window from insert mode
  " Map <C-n> and <C-p>
  imap <buffer><C-n> <Plug>(committia-scroll-diff-down-half)
  imap <buffer><C-p> <Plug>(committia-scroll-diff-up-half)
endfunction
'''

[[plugins]]
repo = 'cohama/agit.vim'
hook_add = '''
autocmd FileType agit call s:my_agit_setting()
function! s:my_agit_setting()
  nmap <buffer> ch <Plug>(agit-git-cherry-pick)
  nmap <buffer> Rv <Plug>(agit-git-revert)
endfunction
'''

[[plugins]]
repo = 'rhysd/conflict-marker.vim'

[[plugins]]
repo = 'tpope/vim-rhubarb'

####################
# Ale:
####################
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
source ~/dotfiles/nvim/plugins/ale.rc.vim
'''

####################
# cURL Client:
####################
[[plugins]]
repo = 'diepm/vim-rest-console'
hook_add = '''
let g:vrc_horizontal_split = 1
'''

####################
# Tag Config:
####################
[[plugins]]
repo = 'ludovicchabant/vim-gutentags'
hook_add = '''
"let g:gutentags_ctags_tagfile = '.git/tags'
"function! s:get_gutentags_status(mods) abort
"    let l:msg = ''
"    if index(a:mods, 'ctags') >= 0
"       let l:msg .= '♨'
"     endif
"     if index(a:mods, 'cscope') >= 0
"       let l:msg .= '♺'
"     endif
"     return l:msg
"endfunction
augroup MyGutentagsStatusLineRefresher
  autocmd!
  autocmd User GutentagsUpdating call lightline#update()
  autocmd User GutentagsUpdated call lightline#update()
augroup END
'''

####################
# Memo:
####################
[[plugins]]
repo = 'fuenor/qfixhowm'

####################
# Folding:
####################
# [[plugins]]
# repo = 'pseewald/vim-anyfold'
# hook_add = '''
# nnoremap zq zC<CR>
# nnoremap zz zO<CR>
# '''

####################
# Operation:
####################
# [[plugins]]
# repo = 'terryma/vim-multiple-cursors'
# hook_add = '''
# highlight multiple_cursors_cursor term=reverse cterm=reverse gui=reverse
# highlight link multiple_cursors_visual Visual
# nnoremap <silent> <SPACE>mc :MultipleCursorsFind <C-R>/<CR>
# vnoremap <silent> <SPACE>mc :MultipleCursorsFind <C-R>/<CR>
# '''

[[plugins]]
repo = 'thinca/vim-qfreplace'
hook_add = 'nnoremap <Space>Q :<C-u>Qfreplace<CR>'

[[plugins]]
repo = 'mbbill/undotree'
hook_add = '''
let g:undotree_WindowLayout = 5
let g:undotree_CustomUndotreeCmd = 'vertical 32 new'
let g:undotree_CustomDiffpanelCmd= 'belowright 12 new'
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'majutsushi/tagbar'
if = '''has('nvim')'''
hook_add = '''
let g:tagbar_previewwin_pos    = "rightbelow"
let g:tagbar_autoclose = 1
let g:tagbar_autofocus = 1
let g:tagbar_show_linenumbers = 1
let g:tagbar_iconchars = [nr2char(0xe5ff) . ' ', nr2char(0xe5fe) . ' '] "  , 
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
let g:NERDSpaceDelims=1
let g:NERDDefaultAlign='left'
let g:ft = ''
" setting for vue file
function! NERDCommenter_before()
  if &ft == 'vue'
    let g:ft = 'vue'
    let stack = synstack(line('.'), col('.'))
    if len(stack) > 0
      let syn = synIDattr((stack)[0], 'name')
      if len(syn) > 0
        exe 'setf ' . substitute(tolower(syn), '^vue_', '', '')
      endif
    endif
  endif
endfunction
function! NERDCommenter_after()
  if g:ft == 'vue'
    setf vue
    let g:ft = ''
  endif
endfunction
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
hook_add = '''
  autocmd BufWritePre * :FixWhitespace
'''

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'junegunn/vim-peekaboo'

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
nmap p <Plug>(yankround-p)
xmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap gp <Plug>(yankround-gp)
xmap gp <Plug>(yankround-gp)
nmap gP <Plug>(yankround-gP)
nmap <C-p><C-b> <Plug>(yankround-prev)
nmap <C-p><C-f> <Plug>(yankround-next)
'''

[[plugins]]
repo = 'kana/vim-smartword'
hook_add = '''
nmap w <Plug>(smartword-w)
xmap w <Plug>(smartword-w)
omap w <Plug>(smartword-w)
nmap b <Plug>(smartword-b)
xmap b <Plug>(smartword-b)
omap b <Plug>(smartword-b)
nmap e <Plug>(smartword-e)
xmap e <Plug>(smartword-e)
omap e <Plug>(smartword-e)
'''

[[plugins]]
repo = 'AndrewRadev/linediff.vim'

####################
# Utility:
####################
[[plugins]]
repo = 't9md/vim-textmanip'
hook_add = '''
  xmap <C-j> <Plug>(textmanip-move-down)
  xmap <C-k> <Plug>(textmanip-move-up)
  xmap <C-h> <Plug>(textmanip-move-left)
  xmap <C-l> <Plug>(textmanip-move-right)
'''

# [[plugins]]
# repo = 'itchyny/calendar.vim'
# hook_add = '''
# let g:calendar_google_calendar = 1
# let g:calendar_google_task = 1
# " TODO: todayのkeymapを変更する(togglとバッティング中)
# '''

[[plugins]]
repo = 'farmergreg/vim-lastplace'
hook_add = '''
let g:lastplace_ignore = "gitcommit,gitrebase,svn,hgcommit"
let g:lastplace_ignore_buftype = "quickfix,nofile,help"
'''

[[plugins]]
repo = 'vim-scripts/gitignore'

[[plugins]]
repo = 'tpope/vim-sleuth'

[[plugins]]
repo = 'tyru/stoptypofile.vim'

####################
# Reference:
####################
[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_add = '''
let g:cheatsheet#cheat_file = '~/.config/nvim/cheatsheet.md'
nnoremap <SPACE>qq :Cheat<CR>
'''

[[plugins]]
repo = 'hecal3/vim-leader-guide'
hook_add = '''
source ~/dotfiles/nvim/plugins/leader_guide.rc.vim
'''
