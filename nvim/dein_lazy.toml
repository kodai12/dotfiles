####################
# Denite:
####################
[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = 'denite.nvim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_source = 'denite.nvim'

[[plugins]]
repo = 'neoclide/denite-git'
on_source = 'denite.nvim'
hook_source = '''
call denite#custom#map(
      \ 'normal',
      \ 'a',
      \ '<denite:do_action:add>',
      \ 'noremap'
      \)

call denite#custom#map(
      \ 'normal',
      \ 'd',
      \ '<denite:do_action:delete>',
      \ 'noremap'
      \)

call denite#custom#map(
      \ 'normal',
      \ 'r',
      \ '<denite:do_action:reset>',
      \ 'noremap'
      \)
'''

[[plugins]]
repo = 'pocari/vim-denite-emoji'
depends = ['denite.nvim', 'vim-emoji']

[[plugins]]
repo = 'junegunn/vim-emoji'

[[plugins]]
repo = 'chemzqm/unite-location'
depends = ['denite.nvim']

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
depends = ['cpsm']
hook_source = '''
source ~/dotfiles/nvim/plugins/denite.rc.vim
'''

[[plugins]]
repo = 'nixprime/cpsm'
build = 'env PY3=ON ./install.sh'

####################
# Deoplete:
####################
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['context_filetype.vim']
on_event = 'InsertEnter'
hook_source = '''
source ~/dotfiles/nvim/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'Shougo/neopairs.vim'
on_event = ['CompleteDone']
hook_source = '''
let g:neopairs#enable = 1
'''

[[plugins]]
repo = 'Shougo/echodoc.vim'
hook_source = '''
set cmdheight=2
let g:echodoc#enable_at_startup = 1
'''

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
depends = ['deoplete.nvim', 'tern_for_vim']
on_ft = ['javascript']

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft   = ['python']
depends = ['deoplete.nvim', 'jedi-vim']
hook_source = '''
  let g:deoplete#sources#jedi#enable_cache   = 1
  let g:deoplete#sources#jedi#show_docstring = 1
'''

[[plugins]]
repo = 'padawan-php/deoplete-padawan'
on_event = 'InsertEnter'
on_ft = ['php']
depends = ['deoplete.nvim']
hook_source = '''
  augroup padawan-setting
    autocmd! FileType php setlocal completeopt-=preview
  augroup END
'''

[[plugins]]
repo = 'zchee/deoplete-go'
on_ft = ['go']
depends = ['deoplete.nvim']
hook_source = '''
set completeopt+=noinsert
set completeopt+=noselect

let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
'''

[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = ['zsh']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'zchee/deoplete-docker'

[[plugins]]
repo = 'SevereOverfl0w/deoplete-github'
depends = ['deoplete.nvim']
on_ft = ['gitrebase', 'gitcommit']
hook_source = '''
let g:deoplete#sources = {}
let g:deoplete#sources.gitcommit=['github']

let g:deoplete#keyword_patterns = {}
let g:deoplete#keyword_patterns.gitcommit = '.+'

call deoplete#util#set_pattern(
  \ g:deoplete#omni#input_patterns,
  \ 'gitcommit', [g:deoplete#keyword_patterns.gitcommit])
'''

[[plugins]]
repo = 'fszymanski/deoplete-emoji'
depends = ['deoplete.nvim']

####################
# Language Client:
####################
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
build = 'bash install.sh'
rev = 'next'
on_ft  = ['vue', 'javascript', 'python', 'css', 'rust']
depends = ['fzf.vim', 'deoplete.nvim']
hook_add = '''
source ~/dotfiles/nvim/plugins/language_client.rc.vim
'''

####################
# Interfaces:
####################
[[plugins]]
repo = 'airblade/vim-gitgutter'
on_event = ['FocusLost', 'CursorHold']
hook_add = '''
let g:gitgutter_diff_args='-w --indent-heuristic'
let g:gitgutter_highlight_lines = 0
let g:gitgutter_sign_added='✚'
let g:gitgutter_sign_modified='➜'
let g:gitgutter_sign_removed='✗'
let g:gitgutter_sign_removed_first_line='↑'
let g:gitgutter_sign_modified_removed='•'
let g:gitgutter_terminal_reports_focus=0
'''
hook_post_source = '''
"{{{
  if &background ==# 'light'
    hi GitGutterAddLine ctermbg=192 guibg=#f0f9e2
    hi GitGutterChangeLine ctermbg=230 guibg=#fff4c9
    hi GitGutterDeleteLine ctermbg=224 guibg=#ffe9ef
  elseif g:colors_name !=# 'nord'
    hi GitGutterAddLine ctermbg=233 guibg=#122b0c
    hi GitGutterChangeLine ctermbg=236 guibg=#342e0e
    hi GitGutterDeleteLine ctermbg=235 guibg=#4e2728
  endif
"}}}
'''

####################
# Language Plugins:
####################
[[plugins]]
repo = 'mattn/sonictemplate-vim'
on_cmd = ['Template']
hook_source = '''
let g:sonictemplate_vim_template_dir = [expand($XDG_CONFIG_HOME.'/nvim/template')]
'''

# html, css
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['css', 'html', 'xhtml', 'php']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css']
hook_add = '''
augroup VimCSS3Syntax
  autocmd!
  autocmd FileType css setlocal iskeyword+=-
augroup END
'''

[[plugins]]
repo = 'ap/vim-css-color'
on_ft = ['css']

# javascript
[[plugins]]
repo = 'ternjs/tern_for_vim'
on_ft = ['javascript']
hook_post_update = '''
!npm install -g tern
'''
hook_source = '''
let g:deoplete#sources#ternjs#types = 1
let g:deoplete#sources#ternjs#depths = 1
let g:deoplete#sources#ternjs#docs = 1
'''

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript']
hook_add = '''
autocmd FileType javascript nmap <silent> <C-_> ?function<cr>:noh<cr><Plug>(jsdoc)
'''

# vue
[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']
hook_add = '''
autocmd FileType vue syntax sync fromstart
set ttyfast
set lazyredraw
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
# on_ft = ['vue', 'toml']
on_ft = ['toml']
hook_source = '''
  let g:precious_enable_switch_CursorMoved_i = {'*': 0}
  let g:precious_enable_switch_CursorHold    = {'*': 0}
	let g:precious_enable_switchers = {
    \	'*':    {'setfiletype': 0},
    \	'toml': {'setfiletype': 1},
    \	'html': {'setfiletype': 1},
    \	'vue':  {'setfiletype': 1},
	\ }
'''

# rust
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_source = '''
  let g:rustfmt_autosave = 1
  let g:rustfmt_command='~/.cargo/bin/rustfmt'
'''

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = ['rust']
hook_source = '''
  set hidden
  let g:racer_cmd='~/.cargo/bin/racer'
  let $RUST_SRC_PATH="/Users/sakochikodai/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src"
  let g:racer_experimental_completer = 1
  nmap <SPACE>gd <Plug>(rust-def)
  nmap <SPACE>gs <Plug>(rust-def-split)
  nmap <SPACE>gx <Plug>(rust-def-vertical)
  nmap <SPACE>K <Plug>(rust-doc)
'''

# solidity
[[plugins]]
repo = 'tomlion/vim-solidity'
on_ft = ['solidity']

# python
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_i = 1
on_ft = ['python']
hook_add = '''
let g:jedi#force_py_version = 3
"let g:jedi#use_splits_not_buffers = 'winwidth'
augroup custom-jedi
  autocmd FileType python nnoremap <silent> ; :call jedi#goto()<CR>
  autocmd FileType python nnoremap <silent> K :call jedi#show_documentation()<CR>
augroup END
'''

[[plugins]]
repo = 'heavenshell/vim-pydocstring'
on_ft = ['python']
hook_add = '''
autocmd FileType python nmap <silent> <C-_> <Plug>(pydocstring)
'''

# python(test settings)
[[plugins]]
repo = 'tpope/vim-dispatch'
on_ft = ['python']

[[plugins]]
repo = 'radenling/vim-dispatch-neovim'
if ='''has('nvim')'''
on_ft = ['python']

[[plugins]]
repo = 'aliev/vim-compiler-python'
on_ft = ['python']
hook_add = '''
let g:python_compiler_fixqflist = 1
'''

[[plugins]]
repo = 'janko-m/vim-test'
on_ft = ['python']
depends = ['vim-dispatch', 'vim-dispatch-neovim']
hook_add = '''
let g:test#strategy = 'dispatch'
let g:test#python#runner = 'nose'
let g:test#javascript#runner = 'jest'
let g:test#rust#runner = 'cargo'
let g:test#runner_commands = ['Nose', 'Jest','Mocha', 'Cargo']
let g:test#preserve_screen = 1
'''

# go
[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'jodosha/vim-godebug'
on_ft = ['go']

# scala
[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = ['scala']

[[plugins]]
repo = 'ensime/ensime-vim'
on_ft = ['scala']
depends = ['vim-scala']
hook_add = '''
autocmd BufWritePost *.scala silent :EnTypeCheck
'''

# docker
[[plugins]]
repo = 'ekalinin/Dockerfile.vim'
on_ft = ['dockerfile']

# json
[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
let g:vim_json_syntax_conceal = 1
'''

# toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# yaml
[[plugins]]
repo = 'chase/vim-ansible-yaml'
on_ft = ['yaml']

# csv
[[plugins]]
repo = 'mechatroner/rainbow_csv'
on_ft = ['csv']

# (plant)uml
[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = ['plantuml']
hook_add = '''
au FileType plantuml command! OpenUml :!plantuml %
'''
[[plugins]]
repo = 'scrooloose/vim-slumlord'
on_ft = ['plantuml']

[[plugins]]
repo = 'kannokanno/previm'
on_cmd = 'PrevimOpen'
depends = 'open-browser.vim'
hook_add = '''
nnoremap <silent> <SPACE>po :PrevimOpen<cr>
'''

####################
# Reference:
####################
[[plugins]]
repo = 'vim-jp/vimdoc-ja'
on_ft = ['help']
